<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018-2021 Crown Copyright
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>uk.gov.gchq.palisade</groupId>
        <artifactId>example</artifactId>
        <version>0.5.0-${revision}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <developers>
        <developer>
            <name>PalisadeDevelopers</name>
            <organization>GCHQ</organization>
            <organizationUrl>https://github.com/gchq</organizationUrl>
        </developer>
    </developers>

    <!--  *********** Artifact ID ***********    -->
    <artifactId>deployment-k8s</artifactId>
    <url>https://github.com/gchq/Palisade-examples/tree/develop/deployment</url>
    <name>GCHQ Palisade - Example Deployment</name>
    <description>
        Copies jars to mounted shared persistent volumes on container start.
    </description>
    <!--  *********** Artifact ID ***********    -->

    <properties>
        <!-- Dockerfile-maven-plugin configurable base image - openjdk:11.0-jdk-slim  OS/ARCH linux/amd64-->
        <dockerfile.base.image>openjdk@sha256:1ee84ab87de99d6edf3592acde24ec909ec9814a8fb24db76a510ddb643b470c</dockerfile.base.image>
        <!-- Prefix image tag with image type being used -->
        <dockerfile.base.tag>jdk</dockerfile.base.tag>
    </properties>

    <profiles>
        <!-- Profile used to update image tag used by helm -->
        <profile>
            <id>pi</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="${project.build.outputDirectory}/values.yaml"
                                              toFile="charts/${project.artifactId}/values.yaml" overwrite="true"/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/values.yaml</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/values.yaml</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dateFormat>yyyyMMdd-HHmmss</dateFormat>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile><!-- somehow necessary. otherwise the variables are not available in the pom -->
                    <useNativeGit>true</useNativeGit>
                </configuration>
            </plugin>
            <plugin>
                <groupId>it.ozimov</groupId>
                <artifactId>yaml-properties-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.basedir}/../deployment-k8s/charts/${project.artifactId}/values.yaml</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-data-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/resources/data</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../resources/data</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-data-scripts</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/scripts</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/k8s-bash-scripts</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <!-- Copy the full set of classpath jars required for each of the example and the performance tests to separate directories -->
                <!-- Currently, these jars are the same (example-lib and hr-data-generator) but could be different in the future -->
                <executions>
                    <execution>
                        <id>copy-example-classpath-jars</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>example-library</artifactId>
                                    <version>${project.version}</version>
                                    <type>${project.packaging}</type>
                                    <classifier>jar-with-dependencies</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>example-user-library</artifactId>
                                    <version>${project.version}</version>
                                    <type>${project.packaging}</type>
                                    <classifier>jar-with-dependencies</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>example-employee-library</artifactId>
                                    <version>${project.version}</version>
                                    <type>${project.packaging}</type>
                                    <classifier>jar-with-dependencies</classifier>
                                </artifactItem>
                            </artifactItems>
                            <!-- Move classpath jars to $hostPath/$deployment-k8s dir, in this case $hostPath=deployment-k8s/target, $deployment="example" -->
                            <outputDirectory>target/example</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-performance-classpath-jars</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>example-library</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>jar-with-dependencies</classifier>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>target/performance-test</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-s3-classpath-jars</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>example-library</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>jar-with-dependencies</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>s3-resource-service</artifactId>
                                    <version>0.5.0-${readers.revision}</version>
                                    <classifier>jar-with-dependencies</classifier>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>s3-data-reader</artifactId>
                                    <version>0.5.0-${readers.revision}</version>
                                    <classifier>jar-with-dependencies</classifier>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>target/s3</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Used to build docker image -->
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.4.10</version>
                <executions>
                    <execution>
                        <phase>post-integration-test</phase>
                        <id>cache</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <phase>deploy</phase>
                        <id>ar</id>
                        <goals>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <repository>${image.repository}${project.artifactId}</repository>
                    <dockerfile>Dockerfile</dockerfile>
                    <!--suppress UnresolvedMavenProperty -->
                    <tag>${dockerfile.base.tag}-${image.tag}</tag>
                    <finalName>${project.artifactId}</finalName>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
